/**
 * DEVELOPMENT WEBPACK CONFIGURATION
 */

const path = require('path');
const fs = require('fs');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const CircularDependencyPlugin = require('circular-dependency-plugin');

const plugins = [
  new webpack.NoEmitOnErrorsPlugin(),
  new HtmlWebpackPlugin({
    inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
    templateContent: templateContent(), // eslint-disable-line no-use-before-define
  }),
  new CircularDependencyPlugin({
    exclude: /node_modules/, // exclude node_modules
    failOnError: true, // show a warning when there is a circular dependency
  }),
  new webpack.DefinePlugin({
    URL: JSON.stringify(process.env.URL || 'http://localhost:3000/'),
  }),
];

module.exports = require('./base')({
  entry: ['babel-polyfill', path.join(process.cwd(), 'src/site/index.js')],

  // Don't use hashes in dev mode for better performance
  output: {
    filename: 'site.js',
  },

  target: 'web',

  // Add development plugins
  plugins, // eslint-disable-line no-use-before-define
});

function templateContent() {
  return fs.readFileSync(path.resolve(process.cwd(), 'src/site/index.html')).toString();
}
